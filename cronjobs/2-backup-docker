#!/bin/bash
set -euo pipefail
{
########################
### SCRIPT VARIABLES ###
########################

home_directory=
GITHUB_AUTH_TOKEN=

#################
### FUNCTIONS ###
#################

lg () {
echo ">>[$(date '+%Y-%m-%d %H:%M:%S')]: $@"
}
####################
### SCRIPT LOGIC ###
####################

lg 'Wind down docker'
docker-compose -f "${home_directory}/docker/docker-compose.yml" down

lg 'Create docker backup file'
tar -cpzf /tmp/docker.tar.gz -C "${home_directory}" docker &> /dev/null

lg 'Getting asset release id'
RELEASE_ID=$(curl -fsSL -H "Authorization: token ${GITHUB_AUTH_TOKEN}" https://api.github.com/repos/rabidpug/artifacts/releases/latest | jq .id)

lg 'Getting asset IDs'
mapfile -t ASSETS < <(curl -fsSL -H "Authorization: token ${GITHUB_AUTH_TOKEN}" "https://api.github.com/repos/rabidpug/artifacts/releases/${RELEASE_ID}/assets" | jq -c '.[] | {name: .name, id: .id}')

lg 'Delete existing remote backups'
for asset in "${ASSETS[@]}"; do
  id=$(echo "$asset" | jq -r .id)
  curl -fsSL -X DELETE -H "Authorization: token ${GITHUB_AUTH_TOKEN}" "https://api.github.com/repos/rabidpug/artifacts/releases/assets/${id}";
done

lg 'Upload new backup file to repo'
curl -fsSL -H "Authorization: token ${GITHUB_AUTH_TOKEN}" -H "Content-Type: application/octet-stream" --data-binary @/tmp/docker.tar.gz "https://uploads.github.com/repos/rabidpug/artifacts/releases/${RELEASE_ID}/assets?name=docker.tar.gz" > /dev/null

lg 'Remove local backup file'
rm -f /tmp/docker.tar.gz

lg 'Docker pull'
docker-compose -f "${home_directory}/docker/docker-compose.yml" pull > /dev/null

lg 'Spin up docker'
docker-compose -f "${home_directory}/docker/docker-compose.yml" up -d &> /dev/null
} &> /var/log/backup_docker.log

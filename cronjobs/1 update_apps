#!/bin/bash
set -euo pipefail
{
########################
### SCRIPT VARIABLES ###
########################

home_directory=
GITHUB_AUTH_TOKEN=

#################
### FUNCTIONS ###
#################

lg () {
echo ">>[$(date '+%Y-%m-%d %H:%M:%S')]: $@"
}
####################
### SCRIPT LOGIC ###
####################

lg 'Apt update'
for i in update {,dist-}upgrade auto{remove,clean}; do
  apt-get $i -y  &> /dev/null;
done

lg 'Update bootstrap'
git -C "${home_directory}/bootstrap" reset --hard -q
git -C "${home_directory}/bootstrap" clean -xdfq
git -C "${home_directory}/bootstrap" pull -q

lg 'Update cronjobs'
for job in "${home_directory}/bootstrap/cronjobs/*"; do
  lg "Update variables for ${job}"
  sed --in-place "s|^GITHUB_AUTH_TOKEN=.*|GITHUB_AUTH_TOKEN=${GITHUB_AUTH_TOKEN}|g" "${home_directory}/bootstrap/cronjobs/${job}"
  sed --in-place "s|^home_directory=.*|home_directory=${home_directory}|g" "${home_directory}/bootstrap/cronjobs/${job}"
  
  lg "Create/update symlink for ${job}"
  ln -sf "${home_directory}/bootstrap/cronjobs/${job}" /etc/cron.daily
done

lg 'Setting owner for cronjobs'
chown --recursive root:root "${home_directory}/bootstrap/cronjobs"

lg 'Update non-apt apps'
{
git -C "${home_directory}/.fzf" pull -q
"${home_directory}/.fzf/install"

curl -fsSL "https://github.com/docker/compose/releases/download/$(curl -fsSL https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
} &> /dev/null
} &> /var/log/update_apps.log

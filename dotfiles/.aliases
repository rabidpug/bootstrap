function dc() {
  config=0
  run=0
  services_path="$HOME/docker/services"
  case $1 in
  "list")
    find "$services_path" -mindepth 1 -maxdepth 1 -type d | while read folder; do
      service=$(basename "$folder")
      echo $service
    done
    return
    ;;
  "edit")
    nano "$services_path/$2/docker-compose.yml"
    return
    ;;
  "cd")
    cd "$services_path/$2"
    return
    ;;
  "set")
  item="$2"
  val="$3"
  shift 3
  config=1
  *)
  run=1
  ;;
  esac
  checking_services=1
  services=()
  while [ "$checking_services" = "1" ]; do
    find "$services_path" -mindepth 1 -maxdepth 1 -type d | while read folder; do
      service_found=0
      service=$(basename "$folder")
      if [ "$service" = "$1" ]; then
        services=("${services[@]}" "$service")
        service_found=1
        shift
      fi
      if [ "$service_found" = "0" ]; then
        checking_services=0
      fi
    done
  done
  if [ "${#services[@]}" = "0" ]; then
    find "$services_path" -mindepth 1 -maxdepth 1 -type d | while read folder; do
      service=$(basename "$folder")
      services=("${services[@]}" "$service")
    done
  fi
  if [ "$run" = "1" ]; then
  for service in "${services[@]}"; do
    if [ -f "$services_path/$service/.directives" ]; then
      source "$services_path/$service/.directives"
    fi
    proceed=1
    case "1" in
    "${IDLE:-}")
      echo "$service is idle"
      proceed=0
      ;;
    esac
    if [ "$proceed" = "1" ]; then
      docker-compose -f "$services_path/$service/docker-compose.yml" "$@"
    fi
    unset IDLE
  done
  elif [ "$config" = 1 ]; then
  for service in "${services[@]}"; do
  directives="$services_path/$service/.directives"
  if [ ! -f "$directives" ]; then
  touch "$directives"
  fi
  
  done
  fi
}

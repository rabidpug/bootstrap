function dc() {
  config=0
  run=0
  ls=0
  ld=0
  services_path="$HOME/docker/services"
  case $1 in
  "ls")
    shift
    ls=1
    ;;
  "edit")
    haspath=$(echo "$2" | grep '/')
    if [ -z "$haspath" ]; then
      nano "$services_path/$2/docker-compose.yml"
    else
      nano "$services_path/$2"
    fi
    return
    ;;
  "cd")
    cd "$services_path/$2"
    return
    ;;
  "set")
    item=$(echo "$2" | tr '[:lower:]' '[:upper:]')
    value="$3"
    shift 3
    config=1
    ;;
  "ld")
    shift
    ld=1
    ;;
  *)
    run=1
    ;;
  esac

  checking_services=1
  services=()
  while [ "$checking_services" = "1" ]; do
    find "$services_path" -mindepth 1 -maxdepth 1 -type d | while read folder; do
      service_found=0
      service=$(basename "$folder")
      if [ "$service" = "$1" ]; then
        services=("${services[@]}" "$service")
        service_found=1
        shift
      fi
      if [ "$service_found" = "0" ]; then
        checking_services=0
      fi
    done
  done
  if [ "${#services[@]}" = "0" ]; then
    find "$services_path" -mindepth 1 -maxdepth 1 -type d | while read folder; do
      service=$(basename "$folder")
      services=("${services[@]}" "$service")
    done
  fi
  skip=()
  for service in "${services[@]}"; do
    directives="$services_path/$service/.directives"
    if [ "$run" = "1" ]; then
      if [ -f "$directives" ]; then
        source "$directives"
      fi
      proceed=1
      case "1" in
      "${IDLE:-}")
        skip=("${skip[@]}" "$service is idle")
        proceed=0
        ;;
      esac
      if [ "$proceed" = "1" ]; then
        docker-compose -f "$services_path/$service/docker-compose.yml" "$@"
      fi
      unset IDLE
    elif [ "$config" = "1" ]; then
      if [ ! -f "$directives" ]; then
        touch "$directives"
      fi
      exists=$(grep "^$item=.*$" "$directives")
      if [ -z "$exists" ]; then
        echo "$item=$value" >>"$directives"
      else
        sed -i "s/^$item=.*$/$item=$value/g" "$directives"
      fi
      echo "set directive $item for $service to $value"
    elif [ "$ls" = "1" ]; then
      echo $service
    elif [ "$ld" = "1" ]; then
      if [ -f "$directives" ]; then
        echo "---$service directives---"
        cat "$directives"
      else
        skip=("${skip[@]}" "$service has no directives")
      fi
    fi
  done
  if [ ! "${#skip[@]}" = "0" ]; then
    for skips in "${skip[@]}"; do
      echo "$skips"
    done
  fi
}
